#server:
#  port: 10021 # 端口 1000X属于eureka端口
#spring:
#  application:
#    name: ep-product # 应用名称，会在Eureka中显示
#  profiles: prod
#eureka:
#  client:
#    service-url:
##      defaultZone: http://127.0.0.1:10000/eureka/
#        defaultZone: http://127.0.0.1:10000/eureka/,http://127.0.0.1:10001/eureka/,http://127.0.0.1:10002/eureka/下·
#    # 当服务消费者启动是，会检测`eureka.client.fetch-registry=true`参数的值，如果为true，则会从Eureka Server服务的列表只读备份，然后缓存在本地。并且`每隔30秒`会重新获取并更新数据。我们可以通过下面的参数来修改：
#    # 在开发时，这个值有点太长了
#    registry-fetch-interval-seconds: 5
#  instance:
#    prefer-ip-address: true # 当调用getHostname获取实例的hostname时，返回ip而不是host名称
#    ip-address: 127.0.0.1 # 指定自己的ip信息，不指定的话会自己寻找
#    instance-id: ${spring.application.name}:${server.port} # DESKTOP-2MVEC12:user-service:8081：是示例的名称，instance-id是区分同一服务的不同实例的唯一标准，因此不能重复
#    #在注册服务完成以后，服务提供者会维持一个心跳（定时向EurekaServer发起Rest请求），告诉EurekaServer：“我还活着”。这个我们称为服务的续约（renew）；
#    # 默认情况下每个30秒服务会向注册中心发送一次心跳，证明自己还活着。如果超过90秒没有发送心跳，EurekaServer就会认为该服务宕机，通过“失效剔除”从服务列表中移除，这两个值在生产环境不要修改，默认即可。
#    # 在开发时，这个值有点太长了
#    # 服务续约(renew)的间隔，默认为30秒
#    lease-renewal-interval-in-seconds: 5
#    # 服务失效时间，默认值90秒
#    lease-expiration-duration-in-seconds: 10
### 修改负载均衡规则的配置入口
##ep-product:
##  ribbon:
##    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule  # 随机算法，默认轮询算法
#info:
#  app:
#    version: 1.1
#    name: ep-product
